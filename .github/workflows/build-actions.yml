name: build-actions
run-name: ${{ github.actor }} pushed and is building
on: 
  push:
    branches:
      - 'develop'
    tags:
    - '*'
jobs:
  build-release:
    strategy:
      matrix:
        os: [ubuntu-latest]
        sharedLib: [on]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'develop'

      - if: ${{ startsWith(matrix.os, 'ubuntu') }} 
        name: Install Requirements
        run: sudo apt-get install -y build-essential  
      
      - name: Create build directory
        run:  cmake -E make_directory build

      - name: Configure
        working-directory: build
        run: cmake -G Ninja -DCMAKE_BUILD_TYPE="release" -DANDROID=OFF -DWASM=OFF -DCMAKE_INSTALL_PREFIX="../install" -DBUILD_SHARED_LIBS=${{ matrix.sharedLib }} ../ 

      - name: Build
        working-directory: build
        run: cmake --build .    

      - name: Install
        working-directory: build
        run: cmake --install .

      - name: Tar Release
        run:  cmake -E tar cvzf ${{ matrix.os }}-shared_${{ matrix.sharedLib }}.tar.gz install/*
        
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ matrix.os }}-shared_${{ matrix.sharedLib }}.tar.gz
          name: ${{ matrix.os }}-shared_${{ matrix.sharedLib }}.tar.gz

      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.os }}-shared_${{ matrix.sharedLib }}.tar.gz
          asset_name: ${{ matrix.os }}-shared_${{ matrix.sharedLib }}.tar.gz
