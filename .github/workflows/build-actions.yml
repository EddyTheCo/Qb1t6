name: build-actions
run-name: ${{ github.actor }} pushed and is building
on: 
  push:
    branches:
      - 'develop'
    tags:
      - 'v*'
jobs:
  build-release:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
        sharedLib: [on,off]
    runs-on: ${{ matrix.os }}


    steps:
          
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get CMake
        uses: symbitic/install-cmake@master      
       
      - name: Get Python
        uses: actions/setup-python@v4    

          # - name: Get msvc-dev-cmd
          #uses: ilammy/msvc-dev-cmd@v1
      
          #- name: Set up GCC
          #if: startsWith(matrix.os, 'ubuntu')
          #uses: egor-tensin/setup-gcc@v1 

      - name: Create build directory
        run:  cmake -E make_directory ${{runner.temp}}/build


      - name: Configure
        working-directory: ${{ runner.temp }}/build
        run: cmake -G Ninja -DCMAKE_BUILD_TYPE="release" -DBUILD_TESTING=ON -DCMAKE_INSTALL_PREFIX="../install" -DBUILD_SHARED_LIBS=${{ matrix.sharedLib }} ${{ github.workspace }}

      - name: Build
        working-directory: ${{ runner.temp }}/build
        run: cmake --build .   

      - name: Test
        working-directory: ${{ runner.temp }}/build
        run: ninja test

      - name: Install
        working-directory: ${{ runner.temp }}/build
        run: cmake --install .

      - name: Binary Package
        working-directory: ${{ runner.temp }}/build
        run:  cpack -B packages --config CPackConfig.cmake

      - name: Source Package
        working-directory: ${{ runner.temp }}/build
        run: cpack -B packages --config CPackSourceConfig.cmake

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ runner.temp }}/build/packages/*.*

